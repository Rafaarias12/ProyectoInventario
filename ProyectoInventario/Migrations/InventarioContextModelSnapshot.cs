// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoInventario.Models;

namespace ProyectoInventario.Migrations
{
    [DbContext(typeof(InventarioContext))]
    partial class InventarioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProyectoInventario.Models.Acta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Documento")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.HasIndex("UserId");

                    b.ToTable("Actas");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Disco")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("Extension")
                        .HasColumnType("int");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<string>("HojaVida")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ip")
                        .HasColumnType("varchar(45)");

                    b.Property<int>("Memoria")
                        .HasColumnType("int");

                    b.Property<int>("ModeloId")
                        .HasColumnType("int");

                    b.Property<int>("Mouse")
                        .HasColumnType("int");

                    b.Property<int>("Multifuncional")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Otro")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("SistemaOperativo")
                        .HasColumnType("varchar(45)");

                    b.Property<int>("Teclado")
                        .HasColumnType("int");

                    b.Property<int>("TipoDisco")
                        .HasColumnType("int");

                    b.Property<string>("TipoEquipo")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("TipoMemoria")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("FacturaId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Facturas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Documento")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Proveedor")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Intentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("IntentosUsuarios");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Mantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Marca")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Procesador")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Pagina")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Permisos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acceso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModuloId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuloId");

                    b.HasIndex("RoleId");

                    b.ToTable("Permiso");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Software", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEquipo")
                        .HasColumnType("datetime");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.ToTable("Software");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Tickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caso")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Solucion")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoCasoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.HasIndex("TipoCasoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.TipoTickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("TipoTicket");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("RolesId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Acta", b =>
                {
                    b.HasOne("ProyectoInventario.Models.Entidades.Equipo", "Equipo")
                        .WithMany("Acta")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoInventario.Models.Entidades.Users", "User")
                        .WithMany("Acta")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Equipo", b =>
                {
                    b.HasOne("ProyectoInventario.Models.Entidades.Facturas", "Factura")
                        .WithMany("Equipos")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoInventario.Models.Entidades.Modelo", "Modelo")
                        .WithMany("Equipo")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Intentos", b =>
                {
                    b.HasOne("ProyectoInventario.Models.Entidades.Users", "Usuario")
                        .WithMany("Intentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Mantenimiento", b =>
                {
                    b.HasOne("ProyectoInventario.Models.Entidades.Equipo", "Equipo")
                        .WithMany("Mantenimiento")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Permisos", b =>
                {
                    b.HasOne("ProyectoInventario.Models.Entidades.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId");

                    b.HasOne("ProyectoInventario.Models.Entidades.Rol", "Role")
                        .WithMany("Permisos")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Software", b =>
                {
                    b.HasOne("ProyectoInventario.Models.Entidades.Equipo", "Equipo")
                        .WithMany("Software")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Tickets", b =>
                {
                    b.HasOne("ProyectoInventario.Models.Entidades.Equipo", "Equipo")
                        .WithMany("Ticket")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoInventario.Models.Entidades.TipoTickets", "TipoCaso")
                        .WithMany("Ticket")
                        .HasForeignKey("TipoCasoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoInventario.Models.Entidades.Users", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("ProyectoInventario.Models.Entidades.Users", b =>
                {
                    b.HasOne("ProyectoInventario.Models.Entidades.Rol", "Roles")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
